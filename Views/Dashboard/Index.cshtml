@model DashboardViewModel

@{
    ViewData["Title"] = "List";
    int i = 0;
}


<div class="text-center">
    <h1 class="display-4 ">@Model.Lists.First().Board.Title  </h1>
</div>


    <div class="row my-3">
        @foreach (var list in Model.Lists)
        {
            <div class="col-3 mb-5">
                <h5 class="card-title">@list.Title</h5>
                <ul class="list-group">
                    @if (list.Works != null && list.Works.Count > 0 )
                    {
                        @foreach (var work in list.Works.OrderBy(x => x.Priority))
                        {
                    <li class="list-group-item">
                        <span style="" class="col-3">&nbsp;&nbsp;</span>
                        @work.Title
                        <br />

                        @if (@work.Deadline != null)
                        {
                            <div>Deadline:  @work.Deadline</div>

                        }
                        @if (@work.WorkMembers.Any())
                        {
                            <div class="text-left">Work Member(s)</div>
                            foreach (var workMember in work.WorkMembers)
                            {
                                <div class="text-left">  @workMember.Member.Name </div>
                            }
                        }
                    </li>
                        }
                    } 
                    <li class="list-group-item text-muted">
                        <div id="@("addNewWorkButton" + list.ListId )"> <button class="btn btn-primary" onclick="getElementById('@("addNewWork" + list.ListId )').style.display = 'block'; this.style.display = 'none'">+ Add a new work</button> </div>
                        <div id="@("addNewWork" + list.ListId )" style="display:none;">
                           
                            <form asp-action="AddWork">
                                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                                @Html.Hidden("ListId", @Model.Lists[i++].ListId.ToString())                      
                                <input type="text" class="form-control" asp-for="Work.Title" placeholder="Enter a work name">
                                <input type="submit" class="btn btn-primary" value="Save new work">
  

                            </form>
                                <button class="btn btn-danger " value="" onclick="getElementById('@("addNewWorkButton" + list.ListId )').style.display = 'inline'; document.getElementById('@("addNewWork" + list.ListId )').style.display = 'none';">Cancel</button>
                        </div>
                    </li>
                </ul>
            </div>
        }

    <div class="col-3 mt-4">
        <ul class="list-group">
            <li class="list-group-item text-muted">
                <div id="addListButton">
                    <a class="btn btn-primary" asp-action="CreateList" asp-route-id="@Model.Lists.FirstOrDefault().BoardId">Create a List</a>
                </div>
            </li>
        </ul>
    </div>
        @*<div class="col-3">
            <ul class="list-group">
                <li class="list-group-item text-muted">
                    <div id="addListButton"> <button class="btn btn-primary" onclick="getElementById('addNewList').style.display = 'block'; document.getElementById('addListButton').style.display = 'none';">+ Add a new list!</button> </div>
                    <div id="addNewList" style="display:none;">
                        <input type="text" class="form-control" placeholder="Enter a list name">
                        <button class="btn btn-primary" value="">Add List</button>
                        <button class="btn btn-danger " value="" onclick="getElementById('addListButton').style.display = 'block'; document.getElementById('addNewList').style.display = 'none';">Cancel</button>
                    </div>
                </li>
            </ul>
        </div>*@
    </div>


